#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        generic {
            bindings = <
                &set_color RGB_WHITE
                &kp ESC     &kp N1  &kp N2      &kp N3     &kp N4        &kp N5              &kp UP_ARROW     &kp N6     &kp N7     &kp N8           &kp N9           &kp N0    &kp EQUAL
                &kp TAB     &kp Q   &kp W       &kp E      &kp R         &kp T               &kp DOWN_ARROW   &kp Y      &kp U      &kp I            &kp O            &kp P     &kp SINGLE_QUOTE
                &kp CAPS    &kp A   &kp S       &kp D      &kp F         &kp G               &kp LEFT_ARROW   &kp H      &kp J      &kp K            &kp L            &kp SEMI  &kp ENTER
                &kp LSHFT   &kp Z   &kp X       &kp C      &kp V         &kp B               &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA        &kp DOT          &kp FSLH  &kp MINUS
                &kp C_MUTE  &tog 1  &kp DELETE  &kp ENTER  &kp LEFT_ALT  &kp LEFT_CONTROL    &kp ENTER        &kp SPACE  &kp ENTER  &rgb_ug RGB_TOG  &kp RIGHT_SHIFT  &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        modeling {
            bindings = <
                &set_color RGB_BLUE
                &kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
                &trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
                &trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                &trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
                &kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        gaming {
            bindings = <
                &set_color RGB_RED
                &kp ESC     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8           &kp N9           &kp N0    &kp EQUAL
                &kp TAB     &kp Q         &kp W         &kp E         &kp R         &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I            &kp O            &kp P     &kp SINGLE_QUOTE
                &kp CAPS    &kp A         &kp S         &kp D         &kp F         &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K            &kp L            &kp SEMI  &kp ENTER
                &kp LSHFT   &kp Z         &kp X         &kp C         &kp V         &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA        &kp DOT          &kp FSLH  &kp MINUS
                &kp C_MUTE  &kp NUMBER_4  &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &rgb_ug RGB_TOG  &kp RIGHT_SHIFT  &tog 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_3 {
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
